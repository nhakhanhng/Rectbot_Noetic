#!/usr/bin/env python3

import rospy
from std_msgs.msg import Float32
import time
import board
import busio
import adafruit_ina219
from adafruit_ina219 import ADCResolution, BusVoltageRange, Gain, INA219
i2c = busio.I2C(board.SCL, board.SDA)
ina219 = INA219(i2c)

# optional : change configuration to use 32 samples averaging for both bus voltage and shunt voltage
ina219.bus_adc_resolution = ADCResolution.ADCRES_12BIT_32S
ina219.shunt_adc_resolution = ADCResolution.ADCRES_12BIT_32S
# optional : change voltage range to 32V
ina219.bus_voltage_range = BusVoltageRange.RANGE_32V
ina219.gain = Gain.DIV_8_320MV

def main():
    rospy.init_node('ina219')
    volt_msg = Float32()
    pub_volt = rospy.Publisher('batt_volt', Float32, queue_size=100)
    rate = rospy.Rate(0.5)
    while not rospy.is_shutdown():
        bus_voltage = ina219.bus_voltage
        volt_msg.data = bus_voltage
        pub_volt.publish(volt_msg)
        rate.sleep()

if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass
